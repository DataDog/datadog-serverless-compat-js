name: Publish packages on NPM

on:
  workflow_dispatch:
    inputs:
      publish-package:
        description: "Build or Build and Publish?"
        required: true
        type: choice
        default: "Build"
        options:
          - "Build"
          - "Build and Publish"

permissions: {}

jobs:
  downloadbinaries:
    runs-on: ubuntu-latest
    outputs:
      package-version: ${{ steps.package.outputs.package-version }}
      serverless-compat-version: ${{ steps.serverless-compat-binary.outputs.serverless-compat-version }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - id: package
        run: |
          MODE="${{ github.event.inputs.publish-package }}"
          if [[ "$MODE" == "Build" ]]; then
            PACKAGE_VERSION=$(awk -F '"' '/"version":/ {print $4}' package.json)
          else
            if [[ ! "$GITHUB_REF" =~ ^refs/tags/v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              echo "Invalid tag format: $GITHUB_REF, must be in the form vMAJOR.MINOR.PATCH"
              exit 1
            fi
            PACKAGE_VERSION="${GITHUB_REF#refs/tags/v}"
          fi

          echo "package-version=$PACKAGE_VERSION" >> "$GITHUB_OUTPUT"
      - id: serverless-compat-binary
        run: |
          RESPONSE=$(curl -s "https://api.github.com/repos/datadog/serverless-components/releases")
          SERVERLESS_COMPAT_VERSION=$(echo "$RESPONSE" | jq -r --arg pattern "datadog-serverless-compat\/v[0-9]*\.[0-9]*\.[0-9]*" '.[] | select(.tag_name | test($pattern)) | .tag_name' | sort -V | tail -n 1)

          echo "Using version ${SERVERLESS_COMPAT_VERSION} of Serverless Compatibility Layer binary"
          echo "serverless-compat-version=$(echo "$SERVERLESS_COMPAT_VERSION" | jq -rR 'ltrimstr("sls-")')" >> "$GITHUB_OUTPUT"

          curl --output-dir ./temp/ --create-dirs -O -s -L "https://github.com/DataDog/serverless-components/releases/download/${SERVERLESS_COMPAT_VERSION}/datadog-serverless-compat.zip"
          unzip ./temp/datadog-serverless-compat.zip -d ./
      - uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: bin
          path: bin
  build:
    runs-on: ubuntu-latest
    needs: [downloadbinaries]
    env:
      PACKAGE_VERSION: ${{ needs.downloadbinaries.outputs.package-version }}
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
      - uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v4.1.0
        with:
          node-version: "18.x"
      - run: yarn config set npmAuthToken $NPM_PUBLISH_TOKEN
        env:
          NPM_PUBLISH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
      - run: yarn version ${{ env.PACKAGE_VERSION }}
      - run: yarn
      - run: yarn pack
      - uses: actions/upload-artifact@b4b15b8c7c6ac21ea08fcf65892d2ee8f75cf882 # v4.4.3
        with:
          name: package
          path: package.tgz
  publish:
    if: ${{ github.event.inputs.publish-package == 'Build and Publish' }}
    runs-on: ubuntu-latest
    needs: [downloadbinaries]
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
      - uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
      - uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v4.1.0
        with:
          node-version: "18.x"
      - run: yarn config set npmAuthToken $NPM_PUBLISH_TOKEN
        env:
          NPM_PUBLISH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}
      - run: yarn
      - run: yarn npm publish
  release:
    if: ${{ github.event.inputs.publish-package == 'Build and Publish' }}
    runs-on: ubuntu-latest
    needs: [build, publish]
    permissions:
      contents: write
    env:
      PACKAGE_VERSION: ${{ needs.downloadbinaries.outputs.package-version }}
      SERVERLESS_COMPAT_VERSION: ${{ needs.downloadbinaries.outputs.serverless-compat-version }}
    steps:
      - uses: softprops/action-gh-release@01570a1f39cb168c169c802c3bceb9e93fb10974 # v2.1.0
        with:
          body: "Uses [${{ env.SERVERLESS_COMPAT_VERSION }}](https://github.com/DataDog/serverless-components/releases/tag/${{ env.SERVERLESS_COMPAT_VERSION }}) of the Serverless Compatibility Layer binary."
          draft: true
          tag_name: "v${{ env.PACKAGE_VERSION }}"
          generate_release_notes: true
          make_latest: true
